stages:
  - build
  - dist
  - deploy

Build App:
  stage: build
  image: node:6.10
  script:
    - npm install
    - npm run-script build
  artifacts:
    when: always
    expire_in: 5 days
    paths:
      - dist/*
      - dist/**/*
      - package.json
      - index.js

Build Staging Image:
  stage: dist
  image: docker:latest
  services:
    - docker:dind
  script:
    - export IMAGE_TAG=$CI_REGISTRY_IMAGE:staging-${CI_COMMIT_SHA:0:8}
    - docker info
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD registry.gitlab.com
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  dependencies:
    - Build App
  only:
    - develop

Deploy to Staging:
  stage: deploy
  image: google/cloud-sdk
  script:
    - export IMAGE_TAG=staging-${CI_COMMIT_SHA:0:8}
    - echo "$GOOGLE_KEY" > key.json
    - gcloud auth activate-service-account --key-file key.json
    - gcloud config set compute/zone europe-west1-c
    - gcloud config set project kubernetes-155014
    - gcloud config set container/use_client_certificate True
    - gcloud container clusters get-credentials kube-prd
    - sed -i 's/___DPL_VERSION_TAG___/'"$IMAGE_TAG"'/g' k8s/staging/deployment.yaml
    - kubectl apply -f k8s/staging/deployment.yaml
  environment:
    name: Staging
    url: https://staging.larsvanherk.com
  only:
    - develop

Build Production Image:
  stage: dist
  image: docker:latest
  services:
    - docker:dind
  variables:
      IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  script:
    - docker info
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD registry.gitlab.com
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  dependencies:
    - Build App
  only:
    - tags
  except:
    - ^(?!master$)

Deploy to Production:
  stage: deploy
  image: google/cloud-sdk
  variables:
      IMAGE_TAG: $CI_COMMIT_TAG
  script:
    - echo "$GOOGLE_KEY" > key.json
    - gcloud auth activate-service-account --key-file key.json
    - gcloud config set compute/zone europe-west1-c
    - gcloud config set project kubernetes-155014
    - gcloud config set container/use_client_certificate True
    - gcloud container clusters get-credentials kube-prd
    - sed -i 's/___DPL_VERSION_TAG___/'"$IMAGE_TAG"'/g' k8s/production/deployment.yaml
    - kubectl apply -f k8s/production/deployment.yaml
  environment:
    name: Production
    url: https://www.larsvanherk.com
  only:
    - tags
  except:
    - ^(?!master$)
